---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: json-server-deployment
spec:
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: json-server
    spec:
      containers:
      - name: json-server
        image: clue/json-server:latest #if next deploy fails, check this
        command: ["json-server"]
        args: ["https://raw.githubusercontent.com/typicode/json-server/master/db.json"] #if next deploy fails, check this
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: json-server-service
spec:
  ports:
  - port: 8000 # the port that this service should serve on
    # the container on each pod to connect to, can be a name
    # (e.g. 'www') or a number (e.g. 80)
    targetPort: 3000
    protocol: TCP
  # just like the selector in the deployment,
  # but this time it identifies the set of pods to load balance
  # traffic to.
  type: LoadBalancer
  selector:
    app: json-server
